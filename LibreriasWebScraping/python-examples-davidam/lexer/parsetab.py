#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright (C) 2018  David Arroyo Menéndez

# Author: David Arroyo Menéndez <davidam@gnu.org>
# Maintainer: David Arroyo Menéndez <davidam@gnu.org>

# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with GNU Emacs; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301 USA,

# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSNAME NUMBER PLUS MINUS TIMES DIVIDE EQUALS LPAREN RPARENstatement : NAME EQUALS expressionstatement : expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'

_lr_action_items = {'EQUALS':([6,],[14,]),'LPAREN':([0,1,3,9,10,11,12,14,],[3,3,3,3,3,3,3,3,]),'RPAREN':([4,7,8,13,15,16,17,18,19,],[-9,-7,-10,19,-4,-6,-5,-3,-8,]),'$end':([2,4,5,6,7,8,15,16,17,18,19,20,],[-2,-9,0,-10,-7,-10,-4,-6,-5,-3,-8,-1,]),'NUMBER':([0,1,3,9,10,11,12,14,],[4,4,4,4,4,4,4,4,]),'NAME':([0,1,3,9,10,11,12,14,],[6,8,8,8,8,8,8,8,]),'MINUS':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[1,1,9,1,-9,-10,-7,-10,1,1,1,1,9,1,-4,-6,-5,-3,-8,9,]),'DIVIDE':([2,4,6,7,8,13,15,16,17,18,19,20,],[10,-9,-10,-7,-10,10,10,-6,-5,10,-8,10,]),'PLUS':([2,4,6,7,8,13,15,16,17,18,19,20,],[12,-9,-10,-7,-10,12,-4,-6,-5,-3,-8,12,]),'TIMES':([2,4,6,7,8,13,15,16,17,18,19,20,],[11,-9,-10,-7,-10,11,11,-6,-5,11,-8,11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[5,]),'expression':([0,1,3,9,10,11,12,14,],[2,7,13,15,16,17,18,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calc.py',55),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',59),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',63),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',64),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',65),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',66),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',73),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',77),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',81),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',85),
]
