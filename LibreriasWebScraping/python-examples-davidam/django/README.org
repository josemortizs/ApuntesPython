# Copyright (C) 2018  David Arroyo Menéndez

# Author: David Arroyo Menéndez <davidam@gnu.org>
# Maintainer: David Arroyo Menéndez <davidam@gnu.org>

# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.

# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with GNU Emacs; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301 USA,

# REQUISITOS
En estas notas y código del directorio se asume que tiene instalado
+ Python3
+ Django2

# RESUMEN INTRODUCTORIO DE COMANDOS DJANGO
$ django-admin --help
$ django-admin startproject mysite .
# En mysite encontramos:
# + El conector con la base de datos
# + El directorio de ficheros estáticos
# + TIME/ZONE
$ python3 manage.py startapp blog
# Una vez que creas un modelo, por ej, post
$ python3 manage.py makemigrations blog
$ python3 manage.py migrate
# Chequear si hay problemas sin crear migraciones o tocar la base de datos
$ python manage.py check
# Resetear migraciones (Método 1)
$ rm -rf polls/migrations
# Resetear migraciones (Método 2)
$ python3 manage.py migrate --fake core zero
# Podemos levantar django desde http://127.0.0.1:8000/
$ python3 manage.py runserver
# O poemos levantar django en el puerto 80 y verlo en http://127.0.0.1
python manage.py runserver 80
# Podemos crear un superusuario para nuestro site
$ python3 manage.py createsuperuser
# Traer ficheros estáticos para mejor el look&feel django
$ python3 manage.py collectstatic

# ##################### SHELL DJANGO #############################################
# Se puede arrancar una shell django desde la consola python con
>>> import django
>>> django.setup()
# O directamente con manage.py
$ python3 manage.py shell
# Podemos ejecutar un script en django shell con:
$ python3 manage.py shell < hello.py
# Ver todos los objetos
>>> from blog.models import Post
>>> Post.objects.all()
# Crear objetos
>>> Post.objects.create(author=me, title='Sample title', text='Test')
# Búsqueda filtrada
>>> Post.objects.filter(author=me)
>>> Post.objects.filter(title__contains='title')
>>> Post.objects.filter(published_date__lte=timezone.now())
# Consigue objeto instanciado
>>> post = Post.objects.get(id=1)
# Asigna el objeto como publicado
>>> post.publish()
# Ordenar posts
>>> Post.objects.order_by('created_date')
>>> Post.objects.order_by('-created_date')
# Cambiar contraseña
>>> from django.contrib.auth.models import User
>>> user = User.objects.get(username="admin")
>>> user.set_password("tunuevapassword")
>>> user.save()

# TEST PARA CHEQUEAR LOGROS EN EL TUTORIAL DE DJANGO

# En el PASO 1 deberías ver en la url http://127.0.0.1:8000/polls/
# http://127.0.0.1:8000/polls/

# En el PASO 2 deberías poder modificar la aplicación desde
# http://127.0.0.1:8000/admin

# En el PASO 3 habrás logrado:
# + [ ] Hacer ejercicios de lógica y presentación (views y templates)
# + [ ] Lanzar errores 404
# + [ ] Eliminar urls hardcodeadas en templates por nombres de URLS con namespaces
